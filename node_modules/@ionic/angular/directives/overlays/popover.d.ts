import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, TemplateRef } from "@angular/core";
import { Components } from "@ionic/core";
import * as ɵngcc0 from '@angular/core';
export declare interface IonPopover extends Components.IonPopover {
}
export declare class IonPopover {
    protected z: NgZone;
    template: TemplateRef<any>;
    ionPopoverDidPresent: EventEmitter<CustomEvent>;
    ionPopoverWillPresent: EventEmitter<CustomEvent>;
    ionPopoverWillDismiss: EventEmitter<CustomEvent>;
    ionPopoverDidDismiss: EventEmitter<CustomEvent>;
    didPresent: EventEmitter<CustomEvent>;
    willPresent: EventEmitter<CustomEvent>;
    willDismiss: EventEmitter<CustomEvent>;
    didDismiss: EventEmitter<CustomEvent>;
    isCmpOpen: boolean;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<IonPopover, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<IonPopover, "ion-popover", never, { "alignment": "alignment"; "animated": "animated"; "arrow": "arrow"; "backdropDismiss": "backdropDismiss"; "cssClass": "cssClass"; "dismissOnSelect": "dismissOnSelect"; "enterAnimation": "enterAnimation"; "event": "event"; "isOpen": "isOpen"; "keyboardClose": "keyboardClose"; "leaveAnimation": "leaveAnimation"; "mode": "mode"; "showBackdrop": "showBackdrop"; "translucent": "translucent"; "trigger": "trigger"; "triggerAction": "triggerAction"; "reference": "reference"; "size": "size"; }, {}, ["template"], never>;
}

//# sourceMappingURL=popover.d.ts.map