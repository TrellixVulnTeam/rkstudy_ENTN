import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, TemplateRef } from "@angular/core";
import { Components } from "@ionic/core";
import * as ɵngcc0 from '@angular/core';
export declare interface IonModal extends Components.IonModal {
}
export declare class IonModal {
    protected z: NgZone;
    template: TemplateRef<any>;
    ionModalDidPresent: EventEmitter<CustomEvent>;
    ionModalWillPresent: EventEmitter<CustomEvent>;
    ionModalWillDismiss: EventEmitter<CustomEvent>;
    ionModalDidDismiss: EventEmitter<CustomEvent>;
    didPresent: EventEmitter<CustomEvent>;
    willPresent: EventEmitter<CustomEvent>;
    willDismiss: EventEmitter<CustomEvent>;
    didDismiss: EventEmitter<CustomEvent>;
    isCmpOpen: boolean;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<IonModal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<IonModal, "ion-modal", never, { "animated": "animated"; "backdropBreakpoint": "backdropBreakpoint"; "backdropDismiss": "backdropDismiss"; "breakpoints": "breakpoints"; "cssClass": "cssClass"; "enterAnimation": "enterAnimation"; "event": "event"; "handle": "handle"; "initialBreakpoint": "initialBreakpoint"; "isOpen": "isOpen"; "keyboardClose": "keyboardClose"; "leaveAnimation": "leaveAnimation"; "mode": "mode"; "presentingElement": "presentingElement"; "showBackdrop": "showBackdrop"; "swipeToClose": "swipeToClose"; "translucent": "translucent"; "trigger": "trigger"; }, {}, ["template"], never>;
}

//# sourceMappingURL=modal.d.ts.map